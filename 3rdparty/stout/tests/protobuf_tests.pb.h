// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf_tests.proto

#ifndef PROTOBUF_protobuf_5ftests_2eproto__INCLUDED
#define PROTOBUF_protobuf_5ftests_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace tests {
class ArrayMessage;
class ArrayMessageDefaultTypeInternal;
extern ArrayMessageDefaultTypeInternal _ArrayMessage_default_instance_;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Nested;
class NestedDefaultTypeInternal;
extern NestedDefaultTypeInternal _Nested_default_instance_;
class SimpleMessage;
class SimpleMessageDefaultTypeInternal;
extern SimpleMessageDefaultTypeInternal _SimpleMessage_default_instance_;
}  // namespace tests

namespace tests {

namespace protobuf_protobuf_5ftests_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_protobuf_5ftests_2eproto

enum Enum {
  ONE = 1,
  TWO = 2
};
bool Enum_IsValid(int value);
const Enum Enum_MIN = ONE;
const Enum Enum_MAX = TWO;
const int Enum_ARRAYSIZE = Enum_MAX + 1;

const ::google::protobuf::EnumDescriptor* Enum_descriptor();
inline const ::std::string& Enum_Name(Enum value) {
  return ::google::protobuf::internal::NameOfEnum(
    Enum_descriptor(), value);
}
inline bool Enum_Parse(
    const ::std::string& name, Enum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Enum>(
    Enum_descriptor(), name, value);
}
// ===================================================================

class Nested : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tests.Nested) */ {
 public:
  Nested();
  virtual ~Nested();

  Nested(const Nested& from);

  inline Nested& operator=(const Nested& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Nested& default_instance();

  static inline const Nested* internal_default_instance() {
    return reinterpret_cast<const Nested*>(
               &_Nested_default_instance_);
  }

  void Swap(Nested* other);

  // implements Message ----------------------------------------------

  inline Nested* New() const PROTOBUF_FINAL { return New(NULL); }

  Nested* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Nested& from);
  void MergeFrom(const Nested& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Nested* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string repeated_str = 3;
  int repeated_str_size() const;
  void clear_repeated_str();
  static const int kRepeatedStrFieldNumber = 3;
  const ::std::string& repeated_str(int index) const;
  ::std::string* mutable_repeated_str(int index);
  void set_repeated_str(int index, const ::std::string& value);
  void set_repeated_str(int index, const char* value);
  void set_repeated_str(int index, const char* value, size_t size);
  ::std::string* add_repeated_str();
  void add_repeated_str(const ::std::string& value);
  void add_repeated_str(const char* value);
  void add_repeated_str(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& repeated_str() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_repeated_str();

  // required string str = 1;
  bool has_str() const;
  void clear_str();
  static const int kStrFieldNumber = 1;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // optional string optional_str = 2;
  bool has_optional_str() const;
  void clear_optional_str();
  static const int kOptionalStrFieldNumber = 2;
  const ::std::string& optional_str() const;
  void set_optional_str(const ::std::string& value);
  #if LANG_CXX11
  void set_optional_str(::std::string&& value);
  #endif
  void set_optional_str(const char* value);
  void set_optional_str(const char* value, size_t size);
  ::std::string* mutable_optional_str();
  ::std::string* release_optional_str();
  void set_allocated_optional_str(::std::string* optional_str);

  // @@protoc_insertion_point(class_scope:tests.Nested)
 private:
  void set_has_str();
  void clear_has_str();
  void set_has_optional_str();
  void clear_has_optional_str();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> repeated_str_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::internal::ArenaStringPtr optional_str_;
  friend struct  protobuf_protobuf_5ftests_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SimpleMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tests.SimpleMessage) */ {
 public:
  SimpleMessage();
  virtual ~SimpleMessage();

  SimpleMessage(const SimpleMessage& from);

  inline SimpleMessage& operator=(const SimpleMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimpleMessage& default_instance();

  static inline const SimpleMessage* internal_default_instance() {
    return reinterpret_cast<const SimpleMessage*>(
               &_SimpleMessage_default_instance_);
  }

  void Swap(SimpleMessage* other);

  // implements Message ----------------------------------------------

  inline SimpleMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SimpleMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SimpleMessage& from);
  void MergeFrom(const SimpleMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SimpleMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 numbers = 2;
  int numbers_size() const;
  void clear_numbers();
  static const int kNumbersFieldNumber = 2;
  ::google::protobuf::int32 numbers(int index) const;
  void set_numbers(int index, ::google::protobuf::int32 value);
  void add_numbers(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      numbers() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_numbers();

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:tests.SimpleMessage)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > numbers_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  friend struct  protobuf_protobuf_5ftests_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tests.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool repeated_bool = 27;
  int repeated_bool_size() const;
  void clear_repeated_bool();
  static const int kRepeatedBoolFieldNumber = 27;
  bool repeated_bool(int index) const;
  void set_repeated_bool(int index, bool value);
  void add_repeated_bool(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      repeated_bool() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_repeated_bool();

  // repeated string repeated_string = 13;
  int repeated_string_size() const;
  void clear_repeated_string();
  static const int kRepeatedStringFieldNumber = 13;
  const ::std::string& repeated_string(int index) const;
  ::std::string* mutable_repeated_string(int index);
  void set_repeated_string(int index, const ::std::string& value);
  void set_repeated_string(int index, const char* value);
  void set_repeated_string(int index, const char* value, size_t size);
  ::std::string* add_repeated_string();
  void add_repeated_string(const ::std::string& value);
  void add_repeated_string(const char* value);
  void add_repeated_string(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& repeated_string() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_repeated_string();

  // repeated bytes repeated_bytes = 14;
  int repeated_bytes_size() const;
  void clear_repeated_bytes();
  static const int kRepeatedBytesFieldNumber = 14;
  const ::std::string& repeated_bytes(int index) const;
  ::std::string* mutable_repeated_bytes(int index);
  void set_repeated_bytes(int index, const ::std::string& value);
  void set_repeated_bytes(int index, const char* value);
  void set_repeated_bytes(int index, const void* value, size_t size);
  ::std::string* add_repeated_bytes();
  void add_repeated_bytes(const ::std::string& value);
  void add_repeated_bytes(const char* value);
  void add_repeated_bytes(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& repeated_bytes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_repeated_bytes();

  // repeated int32 repeated_int32 = 15;
  int repeated_int32_size() const;
  void clear_repeated_int32();
  static const int kRepeatedInt32FieldNumber = 15;
  ::google::protobuf::int32 repeated_int32(int index) const;
  void set_repeated_int32(int index, ::google::protobuf::int32 value);
  void add_repeated_int32(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      repeated_int32() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_repeated_int32();

  // repeated int64 repeated_int64 = 16;
  int repeated_int64_size() const;
  void clear_repeated_int64();
  static const int kRepeatedInt64FieldNumber = 16;
  ::google::protobuf::int64 repeated_int64(int index) const;
  void set_repeated_int64(int index, ::google::protobuf::int64 value);
  void add_repeated_int64(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      repeated_int64() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_repeated_int64();

  // repeated uint32 repeated_uint32 = 17;
  int repeated_uint32_size() const;
  void clear_repeated_uint32();
  static const int kRepeatedUint32FieldNumber = 17;
  ::google::protobuf::uint32 repeated_uint32(int index) const;
  void set_repeated_uint32(int index, ::google::protobuf::uint32 value);
  void add_repeated_uint32(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      repeated_uint32() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_repeated_uint32();

  // repeated uint64 repeated_uint64 = 18;
  int repeated_uint64_size() const;
  void clear_repeated_uint64();
  static const int kRepeatedUint64FieldNumber = 18;
  ::google::protobuf::uint64 repeated_uint64(int index) const;
  void set_repeated_uint64(int index, ::google::protobuf::uint64 value);
  void add_repeated_uint64(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      repeated_uint64() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_repeated_uint64();

  // repeated sint32 repeated_sint32 = 19;
  int repeated_sint32_size() const;
  void clear_repeated_sint32();
  static const int kRepeatedSint32FieldNumber = 19;
  ::google::protobuf::int32 repeated_sint32(int index) const;
  void set_repeated_sint32(int index, ::google::protobuf::int32 value);
  void add_repeated_sint32(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      repeated_sint32() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_repeated_sint32();

  // repeated sint64 repeated_sint64 = 20;
  int repeated_sint64_size() const;
  void clear_repeated_sint64();
  static const int kRepeatedSint64FieldNumber = 20;
  ::google::protobuf::int64 repeated_sint64(int index) const;
  void set_repeated_sint64(int index, ::google::protobuf::int64 value);
  void add_repeated_sint64(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      repeated_sint64() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_repeated_sint64();

  // repeated float repeated_float = 21;
  int repeated_float_size() const;
  void clear_repeated_float();
  static const int kRepeatedFloatFieldNumber = 21;
  float repeated_float(int index) const;
  void set_repeated_float(int index, float value);
  void add_repeated_float(float value);
  const ::google::protobuf::RepeatedField< float >&
      repeated_float() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_repeated_float();

  // repeated double repeated_double = 22;
  int repeated_double_size() const;
  void clear_repeated_double();
  static const int kRepeatedDoubleFieldNumber = 22;
  double repeated_double(int index) const;
  void set_repeated_double(int index, double value);
  void add_repeated_double(double value);
  const ::google::protobuf::RepeatedField< double >&
      repeated_double() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_repeated_double();

  // repeated .tests.Enum repeated_enum = 23;
  int repeated_enum_size() const;
  void clear_repeated_enum();
  static const int kRepeatedEnumFieldNumber = 23;
  ::tests::Enum repeated_enum(int index) const;
  void set_repeated_enum(int index, ::tests::Enum value);
  void add_repeated_enum(::tests::Enum value);
  const ::google::protobuf::RepeatedField<int>& repeated_enum() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_enum();

  // repeated .tests.Nested repeated_nested = 24;
  int repeated_nested_size() const;
  void clear_repeated_nested();
  static const int kRepeatedNestedFieldNumber = 24;
  const ::tests::Nested& repeated_nested(int index) const;
  ::tests::Nested* mutable_repeated_nested(int index);
  ::tests::Nested* add_repeated_nested();
  ::google::protobuf::RepeatedPtrField< ::tests::Nested >*
      mutable_repeated_nested();
  const ::google::protobuf::RepeatedPtrField< ::tests::Nested >&
      repeated_nested() const;

  // repeated string empty = 25;
  int empty_size() const;
  void clear_empty();
  static const int kEmptyFieldNumber = 25;
  const ::std::string& empty(int index) const;
  ::std::string* mutable_empty(int index);
  void set_empty(int index, const ::std::string& value);
  void set_empty(int index, const char* value);
  void set_empty(int index, const char* value, size_t size);
  ::std::string* add_empty();
  void add_empty(const ::std::string& value);
  void add_empty(const char* value);
  void add_empty(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& empty() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_empty();

  // required string str = 1;
  bool has_str() const;
  void clear_str();
  static const int kStrFieldNumber = 1;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // required bytes bytes = 2;
  bool has_bytes() const;
  void clear_bytes();
  static const int kBytesFieldNumber = 2;
  const ::std::string& bytes() const;
  void set_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_bytes(::std::string&& value);
  #endif
  void set_bytes(const char* value);
  void set_bytes(const void* value, size_t size);
  ::std::string* mutable_bytes();
  ::std::string* release_bytes();
  void set_allocated_bytes(::std::string* bytes);

  // required .tests.Nested nested = 12;
  bool has_nested() const;
  void clear_nested();
  static const int kNestedFieldNumber = 12;
  const ::tests::Nested& nested() const;
  ::tests::Nested* mutable_nested();
  ::tests::Nested* release_nested();
  void set_allocated_nested(::tests::Nested* nested);

  // required bool b = 26;
  bool has_b() const;
  void clear_b();
  static const int kBFieldNumber = 26;
  bool b() const;
  void set_b(bool value);

  // optional int32 int32 = 3;
  bool has_int32() const;
  void clear_int32();
  static const int kInt32FieldNumber = 3;
  ::google::protobuf::int32 int32() const;
  void set_int32(::google::protobuf::int32 value);

  // optional int64 int64 = 4;
  bool has_int64() const;
  void clear_int64();
  static const int kInt64FieldNumber = 4;
  ::google::protobuf::int64 int64() const;
  void set_int64(::google::protobuf::int64 value);

  // optional uint64 uint64 = 6;
  bool has_uint64() const;
  void clear_uint64();
  static const int kUint64FieldNumber = 6;
  ::google::protobuf::uint64 uint64() const;
  void set_uint64(::google::protobuf::uint64 value);

  // optional uint32 uint32 = 5;
  bool has_uint32() const;
  void clear_uint32();
  static const int kUint32FieldNumber = 5;
  ::google::protobuf::uint32 uint32() const;
  void set_uint32(::google::protobuf::uint32 value);

  // optional sint32 sint32 = 7;
  bool has_sint32() const;
  void clear_sint32();
  static const int kSint32FieldNumber = 7;
  ::google::protobuf::int32 sint32() const;
  void set_sint32(::google::protobuf::int32 value);

  // optional sint64 sint64 = 8;
  bool has_sint64() const;
  void clear_sint64();
  static const int kSint64FieldNumber = 8;
  ::google::protobuf::int64 sint64() const;
  void set_sint64(::google::protobuf::int64 value);

  // required double d = 10;
  bool has_d() const;
  void clear_d();
  static const int kDFieldNumber = 10;
  double d() const;
  void set_d(double value);

  // optional double optional_no_default = 29;
  bool has_optional_no_default() const;
  void clear_optional_no_default();
  static const int kOptionalNoDefaultFieldNumber = 29;
  double optional_no_default() const;
  void set_optional_no_default(double value);

  // required float f = 9;
  bool has_f() const;
  void clear_f();
  static const int kFFieldNumber = 9;
  float f() const;
  void set_f(float value);

  // required .tests.Enum e = 11;
  bool has_e() const;
  void clear_e();
  static const int kEFieldNumber = 11;
  ::tests::Enum e() const;
  void set_e(::tests::Enum value);

  // optional double optional_default = 28 [default = 42];
  bool has_optional_default() const;
  void clear_optional_default();
  static const int kOptionalDefaultFieldNumber = 28;
  double optional_default() const;
  void set_optional_default(double value);

  // @@protoc_insertion_point(class_scope:tests.Message)
 private:
  void set_has_b();
  void clear_has_b();
  void set_has_str();
  void clear_has_str();
  void set_has_bytes();
  void clear_has_bytes();
  void set_has_int32();
  void clear_has_int32();
  void set_has_int64();
  void clear_has_int64();
  void set_has_uint32();
  void clear_has_uint32();
  void set_has_uint64();
  void clear_has_uint64();
  void set_has_sint32();
  void clear_has_sint32();
  void set_has_sint64();
  void clear_has_sint64();
  void set_has_f();
  void clear_has_f();
  void set_has_d();
  void clear_has_d();
  void set_has_e();
  void clear_has_e();
  void set_has_nested();
  void clear_has_nested();
  void set_has_optional_default();
  void clear_has_optional_default();
  void set_has_optional_no_default();
  void clear_has_optional_no_default();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< bool > repeated_bool_;
  ::google::protobuf::RepeatedPtrField< ::std::string> repeated_string_;
  ::google::protobuf::RepeatedPtrField< ::std::string> repeated_bytes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > repeated_int32_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > repeated_int64_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > repeated_uint32_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > repeated_uint64_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > repeated_sint32_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > repeated_sint64_;
  ::google::protobuf::RepeatedField< float > repeated_float_;
  ::google::protobuf::RepeatedField< double > repeated_double_;
  ::google::protobuf::RepeatedField<int> repeated_enum_;
  ::google::protobuf::RepeatedPtrField< ::tests::Nested > repeated_nested_;
  ::google::protobuf::RepeatedPtrField< ::std::string> empty_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::internal::ArenaStringPtr bytes_;
  ::tests::Nested* nested_;
  bool b_;
  ::google::protobuf::int32 int32_;
  ::google::protobuf::int64 int64_;
  ::google::protobuf::uint64 uint64_;
  ::google::protobuf::uint32 uint32_;
  ::google::protobuf::int32 sint32_;
  ::google::protobuf::int64 sint64_;
  double d_;
  double optional_no_default_;
  float f_;
  int e_;
  double optional_default_;
  friend struct  protobuf_protobuf_5ftests_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ArrayMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tests.ArrayMessage) */ {
 public:
  ArrayMessage();
  virtual ~ArrayMessage();

  ArrayMessage(const ArrayMessage& from);

  inline ArrayMessage& operator=(const ArrayMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArrayMessage& default_instance();

  static inline const ArrayMessage* internal_default_instance() {
    return reinterpret_cast<const ArrayMessage*>(
               &_ArrayMessage_default_instance_);
  }

  void Swap(ArrayMessage* other);

  // implements Message ----------------------------------------------

  inline ArrayMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ArrayMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArrayMessage& from);
  void MergeFrom(const ArrayMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArrayMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tests.SimpleMessage values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::tests::SimpleMessage& values(int index) const;
  ::tests::SimpleMessage* mutable_values(int index);
  ::tests::SimpleMessage* add_values();
  ::google::protobuf::RepeatedPtrField< ::tests::SimpleMessage >*
      mutable_values();
  const ::google::protobuf::RepeatedPtrField< ::tests::SimpleMessage >&
      values() const;

  // @@protoc_insertion_point(class_scope:tests.ArrayMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::tests::SimpleMessage > values_;
  friend struct  protobuf_protobuf_5ftests_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Nested

// required string str = 1;
inline bool Nested::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Nested::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Nested::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Nested::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
inline const ::std::string& Nested::str() const {
  // @@protoc_insertion_point(field_get:tests.Nested.str)
  return str_.GetNoArena();
}
inline void Nested::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Nested.str)
}
#if LANG_CXX11
inline void Nested::set_str(::std::string&& value) {
  set_has_str();
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tests.Nested.str)
}
#endif
inline void Nested::set_str(const char* value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Nested.str)
}
inline void Nested::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Nested.str)
}
inline ::std::string* Nested::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:tests.Nested.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nested::release_str() {
  // @@protoc_insertion_point(field_release:tests.Nested.str)
  clear_has_str();
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nested::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:tests.Nested.str)
}

// optional string optional_str = 2;
inline bool Nested::has_optional_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Nested::set_has_optional_str() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Nested::clear_has_optional_str() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Nested::clear_optional_str() {
  optional_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_optional_str();
}
inline const ::std::string& Nested::optional_str() const {
  // @@protoc_insertion_point(field_get:tests.Nested.optional_str)
  return optional_str_.GetNoArena();
}
inline void Nested::set_optional_str(const ::std::string& value) {
  set_has_optional_str();
  optional_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Nested.optional_str)
}
#if LANG_CXX11
inline void Nested::set_optional_str(::std::string&& value) {
  set_has_optional_str();
  optional_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tests.Nested.optional_str)
}
#endif
inline void Nested::set_optional_str(const char* value) {
  set_has_optional_str();
  optional_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Nested.optional_str)
}
inline void Nested::set_optional_str(const char* value, size_t size) {
  set_has_optional_str();
  optional_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Nested.optional_str)
}
inline ::std::string* Nested::mutable_optional_str() {
  set_has_optional_str();
  // @@protoc_insertion_point(field_mutable:tests.Nested.optional_str)
  return optional_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nested::release_optional_str() {
  // @@protoc_insertion_point(field_release:tests.Nested.optional_str)
  clear_has_optional_str();
  return optional_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nested::set_allocated_optional_str(::std::string* optional_str) {
  if (optional_str != NULL) {
    set_has_optional_str();
  } else {
    clear_has_optional_str();
  }
  optional_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_str);
  // @@protoc_insertion_point(field_set_allocated:tests.Nested.optional_str)
}

// repeated string repeated_str = 3;
inline int Nested::repeated_str_size() const {
  return repeated_str_.size();
}
inline void Nested::clear_repeated_str() {
  repeated_str_.Clear();
}
inline const ::std::string& Nested::repeated_str(int index) const {
  // @@protoc_insertion_point(field_get:tests.Nested.repeated_str)
  return repeated_str_.Get(index);
}
inline ::std::string* Nested::mutable_repeated_str(int index) {
  // @@protoc_insertion_point(field_mutable:tests.Nested.repeated_str)
  return repeated_str_.Mutable(index);
}
inline void Nested::set_repeated_str(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tests.Nested.repeated_str)
  repeated_str_.Mutable(index)->assign(value);
}
inline void Nested::set_repeated_str(int index, const char* value) {
  repeated_str_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tests.Nested.repeated_str)
}
inline void Nested::set_repeated_str(int index, const char* value, size_t size) {
  repeated_str_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tests.Nested.repeated_str)
}
inline ::std::string* Nested::add_repeated_str() {
  // @@protoc_insertion_point(field_add_mutable:tests.Nested.repeated_str)
  return repeated_str_.Add();
}
inline void Nested::add_repeated_str(const ::std::string& value) {
  repeated_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tests.Nested.repeated_str)
}
inline void Nested::add_repeated_str(const char* value) {
  repeated_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tests.Nested.repeated_str)
}
inline void Nested::add_repeated_str(const char* value, size_t size) {
  repeated_str_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tests.Nested.repeated_str)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Nested::repeated_str() const {
  // @@protoc_insertion_point(field_list:tests.Nested.repeated_str)
  return repeated_str_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Nested::mutable_repeated_str() {
  // @@protoc_insertion_point(field_mutable_list:tests.Nested.repeated_str)
  return &repeated_str_;
}

// -------------------------------------------------------------------

// SimpleMessage

// required string id = 1;
inline bool SimpleMessage::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimpleMessage::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimpleMessage::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimpleMessage::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& SimpleMessage::id() const {
  // @@protoc_insertion_point(field_get:tests.SimpleMessage.id)
  return id_.GetNoArena();
}
inline void SimpleMessage::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.SimpleMessage.id)
}
#if LANG_CXX11
inline void SimpleMessage::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tests.SimpleMessage.id)
}
#endif
inline void SimpleMessage::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.SimpleMessage.id)
}
inline void SimpleMessage::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.SimpleMessage.id)
}
inline ::std::string* SimpleMessage::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:tests.SimpleMessage.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SimpleMessage::release_id() {
  // @@protoc_insertion_point(field_release:tests.SimpleMessage.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimpleMessage::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:tests.SimpleMessage.id)
}

// repeated int32 numbers = 2;
inline int SimpleMessage::numbers_size() const {
  return numbers_.size();
}
inline void SimpleMessage::clear_numbers() {
  numbers_.Clear();
}
inline ::google::protobuf::int32 SimpleMessage::numbers(int index) const {
  // @@protoc_insertion_point(field_get:tests.SimpleMessage.numbers)
  return numbers_.Get(index);
}
inline void SimpleMessage::set_numbers(int index, ::google::protobuf::int32 value) {
  numbers_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.SimpleMessage.numbers)
}
inline void SimpleMessage::add_numbers(::google::protobuf::int32 value) {
  numbers_.Add(value);
  // @@protoc_insertion_point(field_add:tests.SimpleMessage.numbers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SimpleMessage::numbers() const {
  // @@protoc_insertion_point(field_list:tests.SimpleMessage.numbers)
  return numbers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SimpleMessage::mutable_numbers() {
  // @@protoc_insertion_point(field_mutable_list:tests.SimpleMessage.numbers)
  return &numbers_;
}

// -------------------------------------------------------------------

// Message

// required bool b = 26;
inline bool Message::has_b() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message::set_has_b() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message::clear_has_b() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message::clear_b() {
  b_ = false;
  clear_has_b();
}
inline bool Message::b() const {
  // @@protoc_insertion_point(field_get:tests.Message.b)
  return b_;
}
inline void Message::set_b(bool value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.b)
}

// required string str = 1;
inline bool Message::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
inline const ::std::string& Message::str() const {
  // @@protoc_insertion_point(field_get:tests.Message.str)
  return str_.GetNoArena();
}
inline void Message::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Message.str)
}
#if LANG_CXX11
inline void Message::set_str(::std::string&& value) {
  set_has_str();
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tests.Message.str)
}
#endif
inline void Message::set_str(const char* value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Message.str)
}
inline void Message::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Message.str)
}
inline ::std::string* Message::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:tests.Message.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_str() {
  // @@protoc_insertion_point(field_release:tests.Message.str)
  clear_has_str();
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:tests.Message.str)
}

// required bytes bytes = 2;
inline bool Message::has_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bytes();
}
inline const ::std::string& Message::bytes() const {
  // @@protoc_insertion_point(field_get:tests.Message.bytes)
  return bytes_.GetNoArena();
}
inline void Message::set_bytes(const ::std::string& value) {
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Message.bytes)
}
#if LANG_CXX11
inline void Message::set_bytes(::std::string&& value) {
  set_has_bytes();
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tests.Message.bytes)
}
#endif
inline void Message::set_bytes(const char* value) {
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Message.bytes)
}
inline void Message::set_bytes(const void* value, size_t size) {
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Message.bytes)
}
inline ::std::string* Message::mutable_bytes() {
  set_has_bytes();
  // @@protoc_insertion_point(field_mutable:tests.Message.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_bytes() {
  // @@protoc_insertion_point(field_release:tests.Message.bytes)
  clear_has_bytes();
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    set_has_bytes();
  } else {
    clear_has_bytes();
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:tests.Message.bytes)
}

// optional int32 int32 = 3;
inline bool Message::has_int32() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Message::set_has_int32() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Message::clear_has_int32() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Message::clear_int32() {
  int32_ = 0;
  clear_has_int32();
}
inline ::google::protobuf::int32 Message::int32() const {
  // @@protoc_insertion_point(field_get:tests.Message.int32)
  return int32_;
}
inline void Message::set_int32(::google::protobuf::int32 value) {
  set_has_int32();
  int32_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.int32)
}

// optional int64 int64 = 4;
inline bool Message::has_int64() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Message::set_has_int64() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Message::clear_has_int64() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Message::clear_int64() {
  int64_ = GOOGLE_LONGLONG(0);
  clear_has_int64();
}
inline ::google::protobuf::int64 Message::int64() const {
  // @@protoc_insertion_point(field_get:tests.Message.int64)
  return int64_;
}
inline void Message::set_int64(::google::protobuf::int64 value) {
  set_has_int64();
  int64_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.int64)
}

// optional uint32 uint32 = 5;
inline bool Message::has_uint32() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Message::set_has_uint32() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Message::clear_has_uint32() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Message::clear_uint32() {
  uint32_ = 0u;
  clear_has_uint32();
}
inline ::google::protobuf::uint32 Message::uint32() const {
  // @@protoc_insertion_point(field_get:tests.Message.uint32)
  return uint32_;
}
inline void Message::set_uint32(::google::protobuf::uint32 value) {
  set_has_uint32();
  uint32_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.uint32)
}

// optional uint64 uint64 = 6;
inline bool Message::has_uint64() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Message::set_has_uint64() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Message::clear_has_uint64() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Message::clear_uint64() {
  uint64_ = GOOGLE_ULONGLONG(0);
  clear_has_uint64();
}
inline ::google::protobuf::uint64 Message::uint64() const {
  // @@protoc_insertion_point(field_get:tests.Message.uint64)
  return uint64_;
}
inline void Message::set_uint64(::google::protobuf::uint64 value) {
  set_has_uint64();
  uint64_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.uint64)
}

// optional sint32 sint32 = 7;
inline bool Message::has_sint32() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Message::set_has_sint32() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Message::clear_has_sint32() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Message::clear_sint32() {
  sint32_ = 0;
  clear_has_sint32();
}
inline ::google::protobuf::int32 Message::sint32() const {
  // @@protoc_insertion_point(field_get:tests.Message.sint32)
  return sint32_;
}
inline void Message::set_sint32(::google::protobuf::int32 value) {
  set_has_sint32();
  sint32_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.sint32)
}

// optional sint64 sint64 = 8;
inline bool Message::has_sint64() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Message::set_has_sint64() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Message::clear_has_sint64() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Message::clear_sint64() {
  sint64_ = GOOGLE_LONGLONG(0);
  clear_has_sint64();
}
inline ::google::protobuf::int64 Message::sint64() const {
  // @@protoc_insertion_point(field_get:tests.Message.sint64)
  return sint64_;
}
inline void Message::set_sint64(::google::protobuf::int64 value) {
  set_has_sint64();
  sint64_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.sint64)
}

// required float f = 9;
inline bool Message::has_f() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Message::set_has_f() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Message::clear_has_f() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Message::clear_f() {
  f_ = 0;
  clear_has_f();
}
inline float Message::f() const {
  // @@protoc_insertion_point(field_get:tests.Message.f)
  return f_;
}
inline void Message::set_f(float value) {
  set_has_f();
  f_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.f)
}

// required double d = 10;
inline bool Message::has_d() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Message::set_has_d() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Message::clear_has_d() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Message::clear_d() {
  d_ = 0;
  clear_has_d();
}
inline double Message::d() const {
  // @@protoc_insertion_point(field_get:tests.Message.d)
  return d_;
}
inline void Message::set_d(double value) {
  set_has_d();
  d_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.d)
}

// required .tests.Enum e = 11;
inline bool Message::has_e() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Message::set_has_e() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Message::clear_has_e() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Message::clear_e() {
  e_ = 1;
  clear_has_e();
}
inline ::tests::Enum Message::e() const {
  // @@protoc_insertion_point(field_get:tests.Message.e)
  return static_cast< ::tests::Enum >(e_);
}
inline void Message::set_e(::tests::Enum value) {
  assert(::tests::Enum_IsValid(value));
  set_has_e();
  e_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.e)
}

// required .tests.Nested nested = 12;
inline bool Message::has_nested() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_nested() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_nested() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_nested() {
  if (nested_ != NULL) nested_->::tests::Nested::Clear();
  clear_has_nested();
}
inline const ::tests::Nested& Message::nested() const {
  // @@protoc_insertion_point(field_get:tests.Message.nested)
  return nested_ != NULL ? *nested_
                         : *::tests::Nested::internal_default_instance();
}
inline ::tests::Nested* Message::mutable_nested() {
  set_has_nested();
  if (nested_ == NULL) {
    nested_ = new ::tests::Nested;
  }
  // @@protoc_insertion_point(field_mutable:tests.Message.nested)
  return nested_;
}
inline ::tests::Nested* Message::release_nested() {
  // @@protoc_insertion_point(field_release:tests.Message.nested)
  clear_has_nested();
  ::tests::Nested* temp = nested_;
  nested_ = NULL;
  return temp;
}
inline void Message::set_allocated_nested(::tests::Nested* nested) {
  delete nested_;
  nested_ = nested;
  if (nested) {
    set_has_nested();
  } else {
    clear_has_nested();
  }
  // @@protoc_insertion_point(field_set_allocated:tests.Message.nested)
}

// repeated bool repeated_bool = 27;
inline int Message::repeated_bool_size() const {
  return repeated_bool_.size();
}
inline void Message::clear_repeated_bool() {
  repeated_bool_.Clear();
}
inline bool Message::repeated_bool(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_bool)
  return repeated_bool_.Get(index);
}
inline void Message::set_repeated_bool(int index, bool value) {
  repeated_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_bool)
}
inline void Message::add_repeated_bool(bool value) {
  repeated_bool_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_bool)
}
inline const ::google::protobuf::RepeatedField< bool >&
Message::repeated_bool() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_bool)
  return repeated_bool_;
}
inline ::google::protobuf::RepeatedField< bool >*
Message::mutable_repeated_bool() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_bool)
  return &repeated_bool_;
}

// repeated string repeated_string = 13;
inline int Message::repeated_string_size() const {
  return repeated_string_.size();
}
inline void Message::clear_repeated_string() {
  repeated_string_.Clear();
}
inline const ::std::string& Message::repeated_string(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_string)
  return repeated_string_.Get(index);
}
inline ::std::string* Message::mutable_repeated_string(int index) {
  // @@protoc_insertion_point(field_mutable:tests.Message.repeated_string)
  return repeated_string_.Mutable(index);
}
inline void Message::set_repeated_string(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tests.Message.repeated_string)
  repeated_string_.Mutable(index)->assign(value);
}
inline void Message::set_repeated_string(int index, const char* value) {
  repeated_string_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tests.Message.repeated_string)
}
inline void Message::set_repeated_string(int index, const char* value, size_t size) {
  repeated_string_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tests.Message.repeated_string)
}
inline ::std::string* Message::add_repeated_string() {
  // @@protoc_insertion_point(field_add_mutable:tests.Message.repeated_string)
  return repeated_string_.Add();
}
inline void Message::add_repeated_string(const ::std::string& value) {
  repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_string)
}
inline void Message::add_repeated_string(const char* value) {
  repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tests.Message.repeated_string)
}
inline void Message::add_repeated_string(const char* value, size_t size) {
  repeated_string_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tests.Message.repeated_string)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Message::repeated_string() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_string)
  return repeated_string_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Message::mutable_repeated_string() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_string)
  return &repeated_string_;
}

// repeated bytes repeated_bytes = 14;
inline int Message::repeated_bytes_size() const {
  return repeated_bytes_.size();
}
inline void Message::clear_repeated_bytes() {
  repeated_bytes_.Clear();
}
inline const ::std::string& Message::repeated_bytes(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_bytes)
  return repeated_bytes_.Get(index);
}
inline ::std::string* Message::mutable_repeated_bytes(int index) {
  // @@protoc_insertion_point(field_mutable:tests.Message.repeated_bytes)
  return repeated_bytes_.Mutable(index);
}
inline void Message::set_repeated_bytes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tests.Message.repeated_bytes)
  repeated_bytes_.Mutable(index)->assign(value);
}
inline void Message::set_repeated_bytes(int index, const char* value) {
  repeated_bytes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tests.Message.repeated_bytes)
}
inline void Message::set_repeated_bytes(int index, const void* value, size_t size) {
  repeated_bytes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tests.Message.repeated_bytes)
}
inline ::std::string* Message::add_repeated_bytes() {
  // @@protoc_insertion_point(field_add_mutable:tests.Message.repeated_bytes)
  return repeated_bytes_.Add();
}
inline void Message::add_repeated_bytes(const ::std::string& value) {
  repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_bytes)
}
inline void Message::add_repeated_bytes(const char* value) {
  repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tests.Message.repeated_bytes)
}
inline void Message::add_repeated_bytes(const void* value, size_t size) {
  repeated_bytes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tests.Message.repeated_bytes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Message::repeated_bytes() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_bytes)
  return repeated_bytes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Message::mutable_repeated_bytes() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_bytes)
  return &repeated_bytes_;
}

// repeated int32 repeated_int32 = 15;
inline int Message::repeated_int32_size() const {
  return repeated_int32_.size();
}
inline void Message::clear_repeated_int32() {
  repeated_int32_.Clear();
}
inline ::google::protobuf::int32 Message::repeated_int32(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_int32)
  return repeated_int32_.Get(index);
}
inline void Message::set_repeated_int32(int index, ::google::protobuf::int32 value) {
  repeated_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_int32)
}
inline void Message::add_repeated_int32(::google::protobuf::int32 value) {
  repeated_int32_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_int32)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Message::repeated_int32() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_int32)
  return repeated_int32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Message::mutable_repeated_int32() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_int32)
  return &repeated_int32_;
}

// repeated int64 repeated_int64 = 16;
inline int Message::repeated_int64_size() const {
  return repeated_int64_.size();
}
inline void Message::clear_repeated_int64() {
  repeated_int64_.Clear();
}
inline ::google::protobuf::int64 Message::repeated_int64(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_int64)
  return repeated_int64_.Get(index);
}
inline void Message::set_repeated_int64(int index, ::google::protobuf::int64 value) {
  repeated_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_int64)
}
inline void Message::add_repeated_int64(::google::protobuf::int64 value) {
  repeated_int64_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_int64)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Message::repeated_int64() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_int64)
  return repeated_int64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Message::mutable_repeated_int64() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_int64)
  return &repeated_int64_;
}

// repeated uint32 repeated_uint32 = 17;
inline int Message::repeated_uint32_size() const {
  return repeated_uint32_.size();
}
inline void Message::clear_repeated_uint32() {
  repeated_uint32_.Clear();
}
inline ::google::protobuf::uint32 Message::repeated_uint32(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_uint32)
  return repeated_uint32_.Get(index);
}
inline void Message::set_repeated_uint32(int index, ::google::protobuf::uint32 value) {
  repeated_uint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_uint32)
}
inline void Message::add_repeated_uint32(::google::protobuf::uint32 value) {
  repeated_uint32_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_uint32)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Message::repeated_uint32() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_uint32)
  return repeated_uint32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Message::mutable_repeated_uint32() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_uint32)
  return &repeated_uint32_;
}

// repeated uint64 repeated_uint64 = 18;
inline int Message::repeated_uint64_size() const {
  return repeated_uint64_.size();
}
inline void Message::clear_repeated_uint64() {
  repeated_uint64_.Clear();
}
inline ::google::protobuf::uint64 Message::repeated_uint64(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_uint64)
  return repeated_uint64_.Get(index);
}
inline void Message::set_repeated_uint64(int index, ::google::protobuf::uint64 value) {
  repeated_uint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_uint64)
}
inline void Message::add_repeated_uint64(::google::protobuf::uint64 value) {
  repeated_uint64_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_uint64)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Message::repeated_uint64() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_uint64)
  return repeated_uint64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Message::mutable_repeated_uint64() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_uint64)
  return &repeated_uint64_;
}

// repeated sint32 repeated_sint32 = 19;
inline int Message::repeated_sint32_size() const {
  return repeated_sint32_.size();
}
inline void Message::clear_repeated_sint32() {
  repeated_sint32_.Clear();
}
inline ::google::protobuf::int32 Message::repeated_sint32(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_sint32)
  return repeated_sint32_.Get(index);
}
inline void Message::set_repeated_sint32(int index, ::google::protobuf::int32 value) {
  repeated_sint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_sint32)
}
inline void Message::add_repeated_sint32(::google::protobuf::int32 value) {
  repeated_sint32_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_sint32)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Message::repeated_sint32() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_sint32)
  return repeated_sint32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Message::mutable_repeated_sint32() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_sint32)
  return &repeated_sint32_;
}

// repeated sint64 repeated_sint64 = 20;
inline int Message::repeated_sint64_size() const {
  return repeated_sint64_.size();
}
inline void Message::clear_repeated_sint64() {
  repeated_sint64_.Clear();
}
inline ::google::protobuf::int64 Message::repeated_sint64(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_sint64)
  return repeated_sint64_.Get(index);
}
inline void Message::set_repeated_sint64(int index, ::google::protobuf::int64 value) {
  repeated_sint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_sint64)
}
inline void Message::add_repeated_sint64(::google::protobuf::int64 value) {
  repeated_sint64_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_sint64)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Message::repeated_sint64() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_sint64)
  return repeated_sint64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Message::mutable_repeated_sint64() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_sint64)
  return &repeated_sint64_;
}

// repeated float repeated_float = 21;
inline int Message::repeated_float_size() const {
  return repeated_float_.size();
}
inline void Message::clear_repeated_float() {
  repeated_float_.Clear();
}
inline float Message::repeated_float(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_float)
  return repeated_float_.Get(index);
}
inline void Message::set_repeated_float(int index, float value) {
  repeated_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_float)
}
inline void Message::add_repeated_float(float value) {
  repeated_float_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_float)
}
inline const ::google::protobuf::RepeatedField< float >&
Message::repeated_float() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_float)
  return repeated_float_;
}
inline ::google::protobuf::RepeatedField< float >*
Message::mutable_repeated_float() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_float)
  return &repeated_float_;
}

// repeated double repeated_double = 22;
inline int Message::repeated_double_size() const {
  return repeated_double_.size();
}
inline void Message::clear_repeated_double() {
  repeated_double_.Clear();
}
inline double Message::repeated_double(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_double)
  return repeated_double_.Get(index);
}
inline void Message::set_repeated_double(int index, double value) {
  repeated_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_double)
}
inline void Message::add_repeated_double(double value) {
  repeated_double_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_double)
}
inline const ::google::protobuf::RepeatedField< double >&
Message::repeated_double() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_double)
  return repeated_double_;
}
inline ::google::protobuf::RepeatedField< double >*
Message::mutable_repeated_double() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_double)
  return &repeated_double_;
}

// repeated .tests.Enum repeated_enum = 23;
inline int Message::repeated_enum_size() const {
  return repeated_enum_.size();
}
inline void Message::clear_repeated_enum() {
  repeated_enum_.Clear();
}
inline ::tests::Enum Message::repeated_enum(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_enum)
  return static_cast< ::tests::Enum >(repeated_enum_.Get(index));
}
inline void Message::set_repeated_enum(int index, ::tests::Enum value) {
  assert(::tests::Enum_IsValid(value));
  repeated_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_enum)
}
inline void Message::add_repeated_enum(::tests::Enum value) {
  assert(::tests::Enum_IsValid(value));
  repeated_enum_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_enum)
}
inline const ::google::protobuf::RepeatedField<int>&
Message::repeated_enum() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_enum)
  return repeated_enum_;
}
inline ::google::protobuf::RepeatedField<int>*
Message::mutable_repeated_enum() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_enum)
  return &repeated_enum_;
}

// repeated .tests.Nested repeated_nested = 24;
inline int Message::repeated_nested_size() const {
  return repeated_nested_.size();
}
inline void Message::clear_repeated_nested() {
  repeated_nested_.Clear();
}
inline const ::tests::Nested& Message::repeated_nested(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_nested)
  return repeated_nested_.Get(index);
}
inline ::tests::Nested* Message::mutable_repeated_nested(int index) {
  // @@protoc_insertion_point(field_mutable:tests.Message.repeated_nested)
  return repeated_nested_.Mutable(index);
}
inline ::tests::Nested* Message::add_repeated_nested() {
  // @@protoc_insertion_point(field_add:tests.Message.repeated_nested)
  return repeated_nested_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tests::Nested >*
Message::mutable_repeated_nested() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_nested)
  return &repeated_nested_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tests::Nested >&
Message::repeated_nested() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_nested)
  return repeated_nested_;
}

// repeated string empty = 25;
inline int Message::empty_size() const {
  return empty_.size();
}
inline void Message::clear_empty() {
  empty_.Clear();
}
inline const ::std::string& Message::empty(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.empty)
  return empty_.Get(index);
}
inline ::std::string* Message::mutable_empty(int index) {
  // @@protoc_insertion_point(field_mutable:tests.Message.empty)
  return empty_.Mutable(index);
}
inline void Message::set_empty(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tests.Message.empty)
  empty_.Mutable(index)->assign(value);
}
inline void Message::set_empty(int index, const char* value) {
  empty_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tests.Message.empty)
}
inline void Message::set_empty(int index, const char* value, size_t size) {
  empty_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tests.Message.empty)
}
inline ::std::string* Message::add_empty() {
  // @@protoc_insertion_point(field_add_mutable:tests.Message.empty)
  return empty_.Add();
}
inline void Message::add_empty(const ::std::string& value) {
  empty_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tests.Message.empty)
}
inline void Message::add_empty(const char* value) {
  empty_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tests.Message.empty)
}
inline void Message::add_empty(const char* value, size_t size) {
  empty_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tests.Message.empty)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Message::empty() const {
  // @@protoc_insertion_point(field_list:tests.Message.empty)
  return empty_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Message::mutable_empty() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.empty)
  return &empty_;
}

// optional double optional_default = 28 [default = 42];
inline bool Message::has_optional_default() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Message::set_has_optional_default() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Message::clear_has_optional_default() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Message::clear_optional_default() {
  optional_default_ = 42;
  clear_has_optional_default();
}
inline double Message::optional_default() const {
  // @@protoc_insertion_point(field_get:tests.Message.optional_default)
  return optional_default_;
}
inline void Message::set_optional_default(double value) {
  set_has_optional_default();
  optional_default_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.optional_default)
}

// optional double optional_no_default = 29;
inline bool Message::has_optional_no_default() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Message::set_has_optional_no_default() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Message::clear_has_optional_no_default() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Message::clear_optional_no_default() {
  optional_no_default_ = 0;
  clear_has_optional_no_default();
}
inline double Message::optional_no_default() const {
  // @@protoc_insertion_point(field_get:tests.Message.optional_no_default)
  return optional_no_default_;
}
inline void Message::set_optional_no_default(double value) {
  set_has_optional_no_default();
  optional_no_default_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.optional_no_default)
}

// -------------------------------------------------------------------

// ArrayMessage

// repeated .tests.SimpleMessage values = 1;
inline int ArrayMessage::values_size() const {
  return values_.size();
}
inline void ArrayMessage::clear_values() {
  values_.Clear();
}
inline const ::tests::SimpleMessage& ArrayMessage::values(int index) const {
  // @@protoc_insertion_point(field_get:tests.ArrayMessage.values)
  return values_.Get(index);
}
inline ::tests::SimpleMessage* ArrayMessage::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:tests.ArrayMessage.values)
  return values_.Mutable(index);
}
inline ::tests::SimpleMessage* ArrayMessage::add_values() {
  // @@protoc_insertion_point(field_add:tests.ArrayMessage.values)
  return values_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tests::SimpleMessage >*
ArrayMessage::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:tests.ArrayMessage.values)
  return &values_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tests::SimpleMessage >&
ArrayMessage::values() const {
  // @@protoc_insertion_point(field_list:tests.ArrayMessage.values)
  return values_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace tests

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tests::Enum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tests::Enum>() {
  return ::tests::Enum_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protobuf_5ftests_2eproto__INCLUDED
